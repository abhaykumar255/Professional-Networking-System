server:
  port: 9000
  http2:
    enabled: true
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain

eureka:
  client:
    service-url:
      defaultZone: http://discovery-server:8761/eureka
    registry-fetch-interval-seconds: 10
    instance-info-replication-interval-seconds: 10
  instance:
    lease-renewal-interval-in-seconds: 10
    lease-expiration-duration-in-seconds: 30

jwt.secretKey: asdfladf98255f89aysf255yasiudfha9s87df255syudhfa98sdfyaisuhdfa98sfy

spring:

  application:
    name: api-gateway

  # Add Redis Configuration
  data:
    redis:
      host: redis
      port: 6379
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0

  cloud:
    gateway:
      httpclient:
        connect-timeout: 3000
        response-timeout: 10s
        pool:
          max-connections: 100
          max-idle-time: 30s

      filter:
        request-rate-limiter:
          redis-rate-limiter:
            replenish-rate: 10  # tokens per second
            burst-capacity: 20  # maximum tokens
            requested-tokens: 1 # tokens per request

      routes:
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/api/v1/users/**
          filters:
            - StripPrefix=2
            - name: RequestRateLimiter
              args:
               redis-rate-limiter.replenish-rate: 5
               redis-rate-limiter.burst-capacity: 10
               key-resolver: "#{@userKeyResolver}"

        - id: posts-service
          uri: lb://POSTS-SERVICE
          predicates:
            - Path=/api/v1/posts/**
          filters:
            - StripPrefix=2
            - name: AuthenticationFilter
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenish-rate: 20
                redis-rate-limiter.burst-capacity: 40
                key-resolver: "#{@userKeyResolver}"

        - id: connection-service
          uri: lb://CONNECTION-SERVICE
          predicates:
            - Path=/api/v1/connections/**
          filters:
            - StripPrefix=2
            - name: AuthenticationFilter

    loadbalancer:
      retry:
        enabled: true
        max-retries-on-same-service-instance: 1
        max-retries-on-next-service-instance: 1


# Zipkin Configuration
management:
  health:
    redis:
      enabled: true
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: http://zipkin:9411/api/v2/spans
  endpoints:
    web:
      exposure:
        include: health,metrics,gateway
  endpoint:
    health:
      show-details: always


logging:
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n"
    file: "{\"timestamp\":\"%d{yyyy-MM-dd HH:mm:ss.SSS}\",\"level\":\"%level\",\"thread\":\"%thread\",\"logger\":\"%logger\",\"traceId\":\"%X{traceId:-}\",\"spanId\":\"%X{spanId:-}\",\"message\":\"%msg\"}%n"
  file:
    name: "/var/log/api-gateway.log"
  level:
    com.professionalnetworking: DEBUG



